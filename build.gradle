plugins {
    id 'java'
    id 'maven-publish'
}

group 'io.github.mjfryc'
version '0.1.12'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}

java {
    withSourcesJar()
    withJavadocJar()
}

def hasSigningKey = System.getEnv("GPG_PASSWORD") != null && System.getEnv("GPG_PRIVATE_KEY") != null
if(hasSigningKey) {
	sign(project)
}
void sign(Project project) {
	project.signing {
        System.out.println("GPG key and password found. Signing maven publications.")
		required { project.gradle.taskGraph.hasTask("required") }
        def signingKey = System.getEnv("GPG_PRIVATE_KEY")
        def signingPassword = project.findProperty("GPG_PASSWORD")
        useInMemoryPgpKeys(signingKey, signingPassword)
		sign publishing.publications.maven
	}
}

project.plugins.withType(MavenPublishPlugin).all {
	PublishingExtension publishing = project.extensions.getByType(PublishingExtension)
	publishing.publications.withType(MavenPublication).all { mavenPublication ->
		mavenPublication.pom {
			name = "${project.group}:${project.name}"
			description = name
			url = "https://github.com/rwinch/gradle-publish-ossrh-sample"
			licenses {
				license {
					name = "MIT License"
					url = "https://raw.githubusercontent.com/mjfryc/mjaron-tinyloki-java/main/LICENSE"
				}
			}
			developers {
				developer {
					id = "mjfryc"
					name = "Michał Jaroń"
					email = "m.jaron@protonmail.com"
				}
			}
			scm {
				connection = "scm:git:https://github.com/mjfryc/mjaron-tinyloki-java"
				developerConnection = "scm:git:git@github.com:mjfryc/mjaron-tinyloki-java.git"
				url = "https://github.com/mjfryc/mjaron-tinyloki-java"
			}
		}
	}
}

// Source: https://docs.github.com/en/actions/guides/publishing-java-packages-with-gradle
// Source: https://github.com/rwinch/gradle-publish-ossrh-sample
// Source: https://docs.github.com/en/authentication/managing-commit-signature-verification/generating-a-new-gpg-key
// Source: https://github.com/rwinch/gradle-publish-ossrh-sample
publishing {
    repositories {
        maven {
            name = "OSSRH"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
        maven {
            name = "GitHubPackages"
            println("GitHubPackages: Publishing package version: $version")
            url = "https://maven.pkg.github.com/mjfryc/mjaron-tinyloki-java"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}
